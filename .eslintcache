[{"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/pages/Content.js":"1","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CommentWrite/index.js":"2","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/Footer/index.js":"3","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/utils/Card/Card.js":"4","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CardWrapper/CardWrapper.js":"5","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/reducer/store.js":"6","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/reportWebVitals.js":"7","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CommentWrite/CommentWrite.js":"8","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/SearchWrapper/index.js":"9","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/Nav/index.js":"10"},{"size":4850,"mtime":1607489883878,"results":"11","hashOfConfig":"12"},{"size":76,"mtime":1607046749442,"results":"13","hashOfConfig":"12"},{"size":58,"mtime":1607046749443,"results":"14","hashOfConfig":"12"},{"size":3650,"mtime":1607589006689,"results":"15","hashOfConfig":"12"},{"size":6613,"mtime":1607588085795,"results":"16","hashOfConfig":"12"},{"size":1646,"mtime":1607588463625,"results":"17","hashOfConfig":"12"},{"size":364,"mtime":1606736343854,"results":"18","hashOfConfig":"12"},{"size":4923,"mtime":1607516120689,"results":"19","hashOfConfig":"12"},{"size":79,"mtime":1606887304973,"results":"20","hashOfConfig":"12"},{"size":46,"mtime":1606887304986,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ipbpry",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":1,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/pages/Content.js",["44","45","46","47","48"],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CommentWrite/index.js",[],["49","50"],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/Footer/index.js",[],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/utils/Card/Card.js",[],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CardWrapper/CardWrapper.js",["51","52","53","54","55","56","57","58","59","60","61","62","63"],"import styled from 'styled-components';\nimport Card from '../utils/Card/index';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../../reducer/store';\nimport { dbService, storageService } from '../../firebase/mainbase';\nimport { useEffect, useState, useMemo, Fragment } from 'react';\n\nimport {\n  CSSTransition,\n  TransitionGroup,\n  Transition,\n} from 'react-transition-group';\n\nconst CardWrapperCover = styled.div``;\n\nconst WrapperLine = styled.span`\n  display: inline-block;\n  width: 100%;\n  border-top: 1px solid black;\n`;\nconst WrapperLineLeft = styled(WrapperLine)`\n  width: 20%;\n  max-width: 350px;\n  position: relative;\n  left: 30px;\n  bottom: 10px;\n`;\nconst WrapperLineRight = styled(WrapperLine)`\n  max-width: 350px;\n  width: 20%;\n  position: relative;\n  right: 30px;\n  bottom: 10px;\n`;\nconst WrapperTitle = styled.div`\n  width: 100%;\n  display: inline-block;\n  font-size: 1.7rem;\n  font-weight: bold;\n  text-align: center;\n`;\nconst CardWrapperStyle = styled.div`\n  column-width: 340px;\n\n  column-gap: 20px;\n  column-count: 3;\n  width: 95%;\n  max-width: 1130px;\n  margin: 20px auto;\n  break-inside: avoid;\n  page-break-inside: avoid;\n  background-color: #ebebeb;\n  display: block;\n  &.appearingCard-enter {\n    opacity: 0;\n  }\n  &.appearingCard-enter-active {\n    opacity: 1;\n  }\n  &.appearingCard-exit {\n    opacity: 1;\n  }\n  &.appearingCard-exit-active {\n    opacity: 0;\n  }\n  &.appearingCard-appear {\n    opacity: 1;\n  }\n  &.appearingCard-appear-active {\n    opacity: 0;\n  }\n`;\n\nconst CardWrapper = ({ state, cardList }) => {\n  const [isTag, setIsTag] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isCozyCafe, setCozyCafe] = useState([]);\n  const [isGoodForTask, setGoodForTask] = useState([]);\n  const [currentKeyword, setCurrentKeyword] = useState('');\n\n  let cardListArr = [];\n  let cozyCafe = [];\n  let goodForTask = [];\n  useEffect(() => {\n    dbService\n      .collection('CafeInformation')\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          cardListArr.push(doc.data());\n        });\n      })\n      .catch(function (error) {\n        console.log('Error getting documents: ', error);\n      })\n      .finally(function () {\n        cardList(cardListArr);\n        setCards(cardListArr);\n        cozyCafe = cardListArr.filter((card) =>\n          !card.cafeTag\n            ? (card.cafeTag = [])\n            : card.cafeTag.indexOf('편안한') !== -1\n        );\n        goodForTask = cardListArr.filter((card) =>\n          !card.cafeTag\n            ? (card.cafeTag = [])\n            : card.cafeTag.indexOf('작업하기 좋은') !== -1\n        );\n        cozyCafe.length > 6\n          ? (cozyCafe = cozyCafe.slice(0, 6))\n          : cozyCafe.length > 3\n          ? cozyCafe.slice(0, 3)\n          : (cozyCafe = []);\n        goodForTask.length > 6\n          ? (goodForTask = goodForTask.slice(0, 6))\n          : goodForTask.length > 3\n          ? goodForTask.slice(0, 3)\n          : (goodForTask = []);\n        setCozyCafe(cozyCafe);\n        setGoodForTask(goodForTask);\n      });\n  }, []);\n\n  let tags = state.tagArr ? state.tagArr.join() : '';\n  useEffect(() => {\n    if (tags !== '') {\n      let results = state.cardArr;\n      let tags = state.tagArr ? state.tagArr : [];\n      for (let tag of tags) {\n        results = results.filter((card) => {\n          if (!card.cafeTag) {\n            card.cafeTag = [];\n          }\n          return card.cafeTag.indexOf(tag) !== -1;\n        });\n      }\n      setCards(results);\n    }\n\n    if (tags === '') {\n    }\n  }, [tags]);\n\n  useEffect(() => {\n    let keyword = state.keyword || '';\n    let returnArr = [];\n    let cardArr = state.cardArr || [];\n    cardArr.forEach((card) => {\n      if (card.cafeName.indexOf(keyword) !== -1) {\n        returnArr.push(card);\n      } else if (card.cafeAddress.indexOf(keyword) !== -1) {\n        returnArr.push(card);\n      }\n    });\n    if (returnArr.length > 0) {\n      setCards(returnArr);\n    }\n  }, [state.keyword]);\n\n  return tags === '' ? (\n    <CardWrapperCover>\n      <WrapperTitle>\n        <WrapperLineRight />\n        <span>분위기 좋은 카페</span>\n        <WrapperLineLeft />\n      </WrapperTitle>\n      <CardWrapperStyle key={1}>\n        {isCozyCafe.map((card) => (\n          <Card\n            cafeid={card.id}\n            cafeName={card.cafeName}\n            cafeTag={card.cafeTag}\n            cafeAddress={card.cafeAddress}\n            cafeImage={card.cafeImg ? card.cafeImg[0] : ''}\n            cafeStar={card.cafeStar}\n          ></Card>\n        ))}\n      </CardWrapperStyle>\n      <WrapperTitle>\n        <WrapperLineRight />\n        <span>작업하기 좋은 카페</span>\n        <WrapperLineLeft />\n      </WrapperTitle>\n      <CardWrapperStyle key={2}>\n        {isGoodForTask.map((card) => (\n          <Card\n            cafeid={card.id}\n            cafeName={card.cafeName}\n            cafeTag={card.cafeTag}\n            cafeAddress={card.cafeAddress}\n            cafeImage={card.cafeImg ? card.cafeImg[0] : ''}\n            cafeStar={card.cafeStar}\n          ></Card>\n        ))}\n      </CardWrapperStyle>\n    </CardWrapperCover>\n  ) : (\n    <CardWrapperCover>\n      <WrapperTitle>\n        <WrapperLineRight />\n        <span>검색 결과</span>\n        <WrapperLineLeft />\n      </WrapperTitle>\n      <CSSTransition\n        in={true}\n        timeout={300}\n        classNames=\"appearingCard\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <CardWrapperStyle>\n          <TransitionGroup component={null}>\n            {cards.map((card) => {\n              return (\n                <CSSTransition\n                  timeout={300}\n                  in={true}\n                  key={card.id}\n                  classNames=\"fadeCard\"\n                  mountOnEnter\n                  unmountOnExit\n                >\n                  <Card\n                    cafeid={card.id}\n                    cafeName={card.cafeName}\n                    cafeTag={card.cafeTag}\n                    cafeAddress={card.cafeAddress}\n                    cafeImage={card.cafeImg ? card.cafeImg[0] : ''}\n                    cafeStar={card.cafeStar}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </CardWrapperStyle>\n      </CSSTransition>\n    </CardWrapperCover>\n  );\n};\nfunction mapStateToProps(state, ownProps) {\n  return { state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    cardList: (card) => dispatch(actionCreators.addCardList(card)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardWrapper);\n","/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/reducer/store.js",["64"],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/reportWebVitals.js",[],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/CommentWrite/CommentWrite.js",["65","66","67"],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/SearchWrapper/index.js",[],"/Users/Myun/Desktop/CodeStates/SearchCaffe_client/src/components/Nav/index.js",[],{"ruleId":"68","severity":1,"message":"69","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":11},{"ruleId":"68","severity":1,"message":"72","line":67,"column":9,"nodeType":"70","messageId":"71","endLine":67,"endColumn":16},{"ruleId":"68","severity":1,"message":"73","line":151,"column":9,"nodeType":"70","messageId":"71","endLine":151,"endColumn":23},{"ruleId":"68","severity":1,"message":"74","line":155,"column":9,"nodeType":"70","messageId":"71","endLine":155,"endColumn":14},{"ruleId":"68","severity":1,"message":"75","line":161,"column":9,"nodeType":"70","messageId":"71","endLine":161,"endColumn":14},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"68","severity":1,"message":"80","line":5,"column":21,"nodeType":"70","messageId":"71","endLine":5,"endColumn":35},{"ruleId":"68","severity":1,"message":"81","line":6,"column":31,"nodeType":"70","messageId":"71","endLine":6,"endColumn":38},{"ruleId":"68","severity":1,"message":"82","line":6,"column":40,"nodeType":"70","messageId":"71","endLine":6,"endColumn":48},{"ruleId":"68","severity":1,"message":"83","line":11,"column":3,"nodeType":"70","messageId":"71","endLine":11,"endColumn":13},{"ruleId":"68","severity":1,"message":"84","line":75,"column":10,"nodeType":"70","messageId":"71","endLine":75,"endColumn":15},{"ruleId":"68","severity":1,"message":"85","line":75,"column":17,"nodeType":"70","messageId":"71","endLine":75,"endColumn":25},{"ruleId":"68","severity":1,"message":"86","line":79,"column":10,"nodeType":"70","messageId":"71","endLine":79,"endColumn":24},{"ruleId":"68","severity":1,"message":"87","line":79,"column":26,"nodeType":"70","messageId":"71","endLine":79,"endColumn":43},{"ruleId":"88","severity":1,"message":"89","line":99,"column":20,"nodeType":"90","endLine":103,"endColumn":10},{"ruleId":"88","severity":1,"message":"91","line":104,"column":23,"nodeType":"90","endLine":108,"endColumn":10},{"ruleId":"88","severity":1,"message":"92","line":142,"column":6,"nodeType":"93","endLine":142,"endColumn":12,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"95","line":158,"column":6,"nodeType":"93","endLine":158,"endColumn":21,"suggestions":"96"},{"ruleId":"97","severity":2,"message":"98","line":246,"column":67,"nodeType":"70","messageId":"99","endLine":246,"endColumn":71},{"ruleId":"68","severity":1,"message":"100","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"101","line":118,"column":10,"nodeType":"70","messageId":"71","endLine":118,"endColumn":15},{"ruleId":"68","severity":1,"message":"102","line":119,"column":10,"nodeType":"70","messageId":"71","endLine":119,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":190,"column":22,"nodeType":"105","endLine":190,"endColumn":71},"no-unused-vars","'img' is defined but never used.","Identifier","unusedVar","'MainImg' is assigned a value but never used.","'ImageContainer' is assigned a value but never used.","'Image' is assigned a value but never used.","'items' is assigned a value but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'storageService' is defined but never used.","'useMemo' is defined but never used.","'Fragment' is defined but never used.","'Transition' is defined but never used.","'isTag' is assigned a value but never used.","'setIsTag' is assigned a value but never used.","'currentKeyword' is assigned a value but never used.","'setCurrentKeyword' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'cozyCafe' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'goodForTask' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'state.cardArr' and 'state.tagArr'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'state.cardArr'. Either include it or remove the dependency array.",["109"],"no-undef","'card' is not defined.","undef","'act' is defined but never used.","'scope' is assigned a value but never used.","'comment' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [state.cardArr, state.tagArr, tags]",{"range":"114","text":"115"},"Update the dependencies array to be: [state.cardArr, state.keyword]",{"range":"116","text":"117"},[3553,3559],"[state.cardArr, state.tagArr, tags]",[3975,3990],"[state.cardArr, state.keyword]"]